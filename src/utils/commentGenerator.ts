
import { Player } from '@/types';

// Type pour les commentaires
export type CommentType = 'info' | 'joke' | 'sarcasm' | 'encouragement' | 'headline';

interface Comment {
  comment: string;
  type: CommentType;
}

// Fonction principale pour obtenir un commentaire al√©atoire
export const getRandomComment = (
  players: Player[], 
  roundHistory: { scores: number[], dutchPlayerId?: string }[]
): Comment => {
  // Si pas de joueurs ou pas de rounds, retourner un commentaire de nouvelle partie
  if (players.length === 0 || (players[0].rounds && players[0].rounds.length === 0)) {
    return getRandomElementFromArray(newGameComments);
  }

  // Analyser l'√©tat du jeu pour des commentaires contextuels
  const lastRoundIndex = roundHistory.length - 1;
  
  // 25% de chance d'avoir un titre fa√ßon presse sportive
  if (Math.random() < 0.25 && lastRoundIndex > 0) {
    return getHeadlineComment(players, roundHistory);
  }
  
  if (lastRoundIndex >= 0) {
    // Obtenir le joueur qui a fait le meilleur score au dernier tour
    const lastRound = roundHistory[lastRoundIndex];
    const minScoreLastRound = Math.min(...lastRound.scores);
    const playerWithMinScoreIndex = lastRound.scores.indexOf(minScoreLastRound);
    const playerWithMinScore = players[playerWithMinScoreIndex];
    
    // Obtenir le joueur qui a fait le pire score au dernier tour
    const maxScoreLastRound = Math.max(...lastRound.scores);
    const playerWithMaxScoreIndex = lastRound.scores.indexOf(maxScoreLastRound);
    const playerWithMaxScore = players[playerWithMaxScoreIndex];
    
    // 60% de chance de faire un commentaire sur un joueur sp√©cifique
    if (Math.random() < 0.6) {
      if (minScoreLastRound === 0) {
        return {
          comment: `${getRandomElementFromArray([
            `${playerWithMinScore.name} nous sort un Dutch de ma√Ætre ! üéØ L'art de la pr√©cision √† l'√©tat pur !`,
            `DUTCH MAGISTRAL ! ${playerWithMinScore.name} vient de donner une le√ßon de strat√©gie √† toute la table !`,
            `${playerWithMinScore.name} transforme l'eau en vin... ou plut√¥t les cartes en 0 point ! Pure magie ! ‚ú®`,
            `Quand ${playerWithMinScore.name} joue, les statistiques tremblent ! Dutch parfait, respect absolu !`,
            `${playerWithMinScore.name} : "Comment faire un Dutch ?" - Regardez et apprenez, mesdames et messieurs !`,
            `Le Dutch de ${playerWithMinScore.name} restera dans les annales ! C'est du grand art, mes amis !`,
            `${playerWithMinScore.name} vient de rappeler √† tout le monde pourquoi ce jeu s'appelle Dutch ! Bravo !`,
            `Silence dans la salle... ${playerWithMinScore.name} vient de r√©aliser l'impossible ! Dutch l√©gendaire !`
          ])}`,
          type: 'encouragement'
        };
      } else if (minScoreLastRound <= 3) {
        return {
          comment: `${getRandomElementFromArray([
            `${playerWithMinScore.name} d√©pose tranquillement ses ${minScoreLastRound} points. L'√©l√©gance dans la simplicit√© !`,
            `${minScoreLastRound} points pour ${playerWithMinScore.name} ! Entre talent et strat√©gie, le d√©bat reste ouvert...`,
            `${playerWithMinScore.name} ma√Ætrise son art : ${minScoreLastRound} points avec une facilit√© d√©concertante !`,
            `Regardez ${playerWithMinScore.name} jouer... ${minScoreLastRound} points comme si c'√©tait √©vident ! Du grand spectacle !`,
            `${playerWithMinScore.name} et ses ${minScoreLastRound} points : quand la technique rencontre l'intuition !`,
            `${minScoreLastRound} points sign√©s ${playerWithMinScore.name} ! C'est ce qu'on appelle avoir la main heureuse !`,
            `${playerWithMinScore.name} continue sa d√©monstration : ${minScoreLastRound} points d'une pr√©cision chirurgicale !`
          ])}`,
          type: 'encouragement'
        };
      } else if (maxScoreLastRound >= 12) {
        return {
          comment: `${getRandomElementFromArray([
            `${playerWithMaxScore.name} encaisse ${maxScoreLastRound} points... Il y a des soirs o√π les √©toiles ne sont pas align√©es !`,
            `${maxScoreLastRound} points d'un coup pour ${playerWithMaxScore.name} ! C'est ce qu'on appelle un moment de solitude cosmique !`,
            `${playerWithMaxScore.name} et ses ${maxScoreLastRound} points... Parfois, les cartes ont leur propre agenda !`,
            `${maxScoreLastRound} points ! ${playerWithMaxScore.name} vient de d√©couvrir que la chance est une dame capricieuse !`,
            `${playerWithMaxScore.name} collectionne ${maxScoreLastRound} points... C'est le moment de changer de strat√©gie, mon ami !`,
            `${maxScoreLastRound} points pour ${playerWithMaxScore.name} ! Les math√©matiques peuvent √™tre cruelles parfois !`,
            `${playerWithMaxScore.name} et ce ${maxScoreLastRound}... On dirait que les cartes ont d√©cid√© de faire une blague !`
          ])}`,
          type: 'sarcasm'
        };
      } else if (maxScoreLastRound >= 8) {
        return {
          comment: `${getRandomElementFromArray([
            `${playerWithMaxScore.name} r√©colte ${maxScoreLastRound} points... C'est le prix √† payer pour jouer avec passion !`,
            `${maxScoreLastRound} points pour ${playerWithMaxScore.name} ! Rien n'est jamais acquis dans ce noble jeu !`,
            `${playerWithMaxScore.name} d√©couvre les joies du ${maxScoreLastRound}... L'apprentissage continue !`,
            `${maxScoreLastRound} points ! ${playerWithMaxScore.name} nous rappelle que le Dutch est impr√©visible !`
          ])}`,
          type: 'info'
        };
      }
    }

    // 35% de chance d'analyser une tendance sur plusieurs tours
    if (Math.random() < 0.35 && lastRoundIndex >= 2) {
      return getTrendComment(players, roundHistory);
    }
  }

  // 30% de chance d'avoir un commentaire sur le classement g√©n√©ral
  if (Math.random() < 0.3) {
    return getLeaderboardComment(players);
  }

  // 20% de chance d'avoir un commentaire philosophique sur le jeu
  if (Math.random() < 0.2) {
    return getRandomElementFromArray(philosophicalComments);
  }

  // Par d√©faut, donner un commentaire informatif sur l'√©tat du jeu
  return {
    comment: getInfoComment(players, roundHistory),
    type: 'info'
  };
};

// Fonction pour g√©n√©rer un commentaire sur le classement
const getLeaderboardComment = (players: Player[]): Comment => {
  const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);
  const leader = sortedPlayers[0];
  const loser = sortedPlayers[sortedPlayers.length - 1];
  
  const gap = loser.totalScore - leader.totalScore;
  
  if (gap > 40) {
    return {
      comment: `${getRandomElementFromArray([
        `${leader.name} r√®gne en ma√Ætre avec ${gap} points d'avance ! Les autres jouent-ils vraiment le m√™me jeu ?`,
        `${gap} points d'√©cart ! ${leader.name} a transform√© cette partie en exhibition personnelle !`,
        `${leader.name} domine avec ${gap} points d'avance... C'est presque g√™nant pour la concurrence !`,
        `${gap} points ! ${leader.name} joue aux √©checs pendant que les autres jouent aux dames !`,
        `Avec ${gap} points d'avance, ${leader.name} pourrait presque jouer les yeux ferm√©s !`
      ])}`,
      type: 'headline'
    };
  } else if (gap > 20) {
    return {
      comment: `${getRandomElementFromArray([
        `${leader.name} creuse l'√©cart : ${gap} points d'avance ! La machine est lanc√©e !`,
        `${gap} points s√©parent ${leader.name} du peloton ! Qui va r√©agir ?`,
        `${leader.name} prend ses distances : ${gap} points d'avance ! C'est le moment de contre-attaquer !`,
        `${gap} points d'√©cart ! ${leader.name} impose son rythme √† cette partie !`
      ])}`,
      type: 'info'
    };
  } else if (gap < 8 && players[0].rounds.length > 3) {
    return {
      comment: `${getRandomElementFromArray([
        `${gap} points d'√©cart seulement ! Cette partie est plus serr√©e qu'un penalty en finale !`,
        `Combat de titans ! ${gap} points entre les extr√™mes, chaque carte compte !`,
        `${gap} points d'√©cart... C'est l√† que les champions se r√©v√®lent !`,
        `Suspense total ! ${gap} points s√©parent ${leader.name} et ${loser.name} !`,
        `${gap} points d'√©cart ! On est sur du spectacle de haute voltige !`
      ])}`,
      type: 'encouragement'
    };
  }

  return {
    comment: `${leader.name} m√®ne avec ${leader.totalScore} points ! La bataille continue !`,
    type: 'info'
  };
};

// Fonction pour g√©n√©rer un titre fa√ßon presse sportive
const getHeadlineComment = (players: Player[], roundHistory: { scores: number[], dutchPlayerId?: string }[]): Comment => {
  const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);
  const leader = sortedPlayers[0];
  const loser = sortedPlayers[sortedPlayers.length - 1];
  
  // Analyser les performances r√©centes
  let risingPlayer = "";
  let fallingPlayer = "";
  
  if (players.length > 0 && players[0].rounds.length >= 3) {
    let bestImprovement = -Infinity;
    let worstDegradation = Infinity;
    
    for (const player of players) {
      const recentRounds = player.rounds.slice(-3);
      const avgRecent = recentRounds.reduce((sum, r) => sum + r.score, 0) / 3;
      const olderRounds = player.rounds.slice(-6, -3);
      
      if (olderRounds.length > 0) {
        const avgOlder = olderRounds.reduce((sum, r) => sum + r.score, 0) / olderRounds.length;
        const improvement = avgOlder - avgRecent;
        
        if (improvement > bestImprovement) {
          bestImprovement = improvement;
          risingPlayer = player.name;
        }
        if (improvement < worstDegradation) {
          worstDegradation = improvement;
          fallingPlayer = player.name;
        }
      }
    }
  }
  
  const headlines: Comment[] = [
    { comment: `üèÜ ${leader.name.toUpperCase()} √âCRASE LA CONCURRENCE ! DOMINATION TOTALE !`, type: 'headline' },
    { comment: `‚ö° PARTIE EXPLOSIVE ! LES SCORES S'ENVOLENT √Ä CHAQUE TOUR !`, type: 'headline' },
    { comment: `üìâ ${loser.name.toUpperCase()} EN CHUTE LIBRE ! REMONTADA POSSIBLE ?`, type: 'headline' },
    { comment: `üéØ TENSIONS MAXIMALES ! LA PARTIE QUI REND FOU !`, type: 'headline' },
    { comment: `üî• DUTCH MANIA ! QUAND LA STRAT√âGIE DEVIENT ART !`, type: 'headline' },
    { comment: `‚öîÔ∏è GUERRE D√âCLAR√âE ! QUI SURVIVRA √Ä CE MASSACRE ?`, type: 'headline' },
    { comment: `üåü PERFORMANCES L√âGENDAIRES ! ON N'A JAMAIS VU √áA !`, type: 'headline' },
    { comment: `üé™ SPECTACLE GRANDIOSE ! CHAQUE CARTE EST UN √âV√âNEMENT !`, type: 'headline' },
    { comment: `üí• REBONDISSEMENTS EN S√âRIE ! PERSONNE N'Y COMPREND PLUS RIEN !`, type: 'headline' },
    { comment: `üé≤ LE HASARD FAIT DES SIENNES ! CHAOS ABSOLU SUR LA TABLE !`, type: 'headline' }
  ];
  
  if (risingPlayer) {
    headlines.push({ comment: `üöÄ ${risingPlayer.toUpperCase()} EN PLEINE ASCENSION ! LA REMONTADA EST EN MARCHE !`, type: 'headline' });
  }
  if (fallingPlayer) {
    headlines.push({ comment: `‚õî ${fallingPlayer.toUpperCase()} DANS LA TOURMENTE ! CHUTE SPECTACULAIRE !`, type: 'headline' });
  }
  
  return getRandomElementFromArray(headlines);
};

// Fonction pour g√©n√©rer un commentaire sur les tendances
const getTrendComment = (players: Player[], roundHistory: { scores: number[], dutchPlayerId?: string }[]): Comment => {
  // Analyser les tendances plus finement
  for (const player of players) {
    if (player.rounds.length < 3) continue;
    
    const lastFourRounds = player.rounds.slice(-4);
    const lastThreeRounds = player.rounds.slice(-3);
    
    // S√©rie de Dutch
    const dutchCount = lastThreeRounds.filter(r => r.isDutch).length;
    if (dutchCount >= 2) {
      return {
        comment: `${getRandomElementFromArray([
          `${player.name} encha√Æne les Dutch ! ${dutchCount} sur les 3 derniers tours ! C'est de la pure ma√Ætrise !`,
          `${dutchCount} Dutch en 3 tours pour ${player.name} ! Quelqu'un a trouv√© la formule magique !`,
          `${player.name} fait du Dutch son art de vivre ! ${dutchCount} r√©ussites r√©centes ! Chapeau l'artiste !`,
          `${dutchCount} Dutch cons√©cutifs pour ${player.name} ! C'est plus qu'un joueur, c'est un ph√©nom√®ne !`
        ])}`,
        type: 'encouragement'
      };
    }
    
    // S√©rie de bons scores
    if (lastThreeRounds.every(r => r.score <= 4)) {
      return {
        comment: `${getRandomElementFromArray([
          `${player.name} est dans sa zone ! 3 tours cons√©cutifs sous les 4 points ! C'est de la r√©gularit√© de champion !`,
          `${player.name} nous r√©gale ! 3 tours d'affil√©e en beaut√© ! Quand le talent rencontre la constance !`,
          `${player.name} encha√Æne les perles ! 3 tours magnifiques ! C'est ce qu'on appelle √™tre dans le flow !`,
          `${player.name} donne une masterclass ! 3 tours parfaits ! Les autres prennent des notes j'esp√®re !`
        ])}`,
        type: 'encouragement'
      };
    }
    
    // S√©rie de mauvais scores
    if (lastThreeRounds.every(r => r.score >= 9)) {
      return {
        comment: `${getRandomElementFromArray([
          `${player.name} traverse une zone de turbulences ! 3 tours difficiles... Courage, √ßa va passer !`,
          `${player.name} conna√Æt un passage √† vide ! 3 tours compliqu√©s, mais les grands joueurs reviennent toujours !`,
          `${player.name} dans l'≈ìil du cyclone ! 3 tours mouvement√©s... C'est le moment de la remontada !`,
          `${player.name} vit des moments compliqu√©s ! 3 tours √©piques... Mais n'oublions pas : apr√®s la pluie, le beau temps !`
        ])}`,
        type: 'sarcasm'
      };
    }
    
    // Am√©lioration spectaculaire
    if (lastFourRounds.length === 4) {
      const firstTwo = lastFourRounds.slice(0, 2);
      const lastTwo = lastFourRounds.slice(-2);
      const avgFirst = firstTwo.reduce((sum, r) => sum + r.score, 0) / 2;
      const avgLast = lastTwo.reduce((sum, r) => sum + r.score, 0) / 2;
      
      if (avgFirst - avgLast > 6) {
        return {
          comment: `${getRandomElementFromArray([
            `${player.name} revient de loin ! Quelle remont√©e spectaculaire ! C'est √ßa, l'esprit du Dutch !`,
            `${player.name} nous sort une remontada digne des plus grands ! Admirable retour !`,
            `${player.name} prouve que rien n'est jamais jou√© ! Quelle le√ßon de pers√©v√©rance !`,
            `${player.name} fait mentir les statistiques ! Remont√©e ph√©nom√©nale ! Respect !`
          ])}`,
          type: 'encouragement'
        };
      }
    }
  }
  
  // Commentaire g√©n√©ral sur la dynamique
  const currentRound = players[0].rounds.length;
  
  return {
    comment: `${getRandomElementFromArray([
      `Tour ${currentRound} : les personnalit√©s se r√©v√®lent ! Qui assumera son style de jeu ?`,
      `${currentRound} manches et toujours autant de surprises ! Le Dutch ne pardonne rien !`,
      `Apr√®s ${currentRound} tours, les vraies valeurs √©mergent ! Qui tiendra la distance ?`,
      `${currentRound} manches : le spectacle continue ! Chaque carte √©crit l'histoire !`,
      `Tour ${currentRound} : la psychologie prend le dessus ! Qui gardera ses nerfs ?`
    ])}`,
    type: 'info'
  };
};

// Commentaires philosophiques sur le jeu
const philosophicalComments: Comment[] = [
  { 
    comment: "Le Dutch, c'est comme la vie : 10% de chance, 90% de mental, et 100% de raisons de philosopher avec ses amis !", 
    type: 'joke' 
  },
  { 
    comment: "Dans le Dutch, ce n'est pas la carte qui fait le joueur, mais l'audace de celui qui la joue !", 
    type: 'encouragement' 
  },
  { 
    comment: "Le vrai Dutch ne se joue pas avec les cartes, mais avec les nerfs ! Et l√†, mes amis, c'est du grand art !", 
    type: 'sarcasm' 
  },
  { 
    comment: "Chaque manche de Dutch est une le√ßon de vie : parfois on gagne, parfois on apprend, mais on s'amuse toujours !", 
    type: 'encouragement' 
  },
  { 
    comment: "Le Dutch r√©v√®le la vraie nature des gens : certains bluffent, d'autres calculent, mais tous vibrent !", 
    type: 'info' 
  },
  { 
    comment: "Dans cette noble discipline qu'est le Dutch, la tension est notre oxyg√®ne et l'amiti√© notre r√©compense !", 
    type: 'joke' 
  },
  { 
    comment: "Le Dutch : o√π chaque d√©cision compte, chaque carte surprend, et chaque ami devient un adversaire... temporairement !", 
    type: 'sarcasm' 
  },
  { 
    comment: "Mes chers joueurs, rappelez-vous : dans le Dutch, la seule certitude c'est l'incertitude ! Et c'est magnifique !", 
    type: 'encouragement' 
  }
];

// Commentaires pour une nouvelle partie
const newGameComments: Comment[] = [
  { comment: "Mesdames et messieurs, installez-vous confortablement ! Le spectacle va commencer et je promets du grand art !", type: 'encouragement' },
  { comment: "Nouvelle partie, nouveaux d√©fis ! Qui saura allier strat√©gie et intuition ? Les paris sont ouverts !", type: 'encouragement' },
  { comment: "Ah, l'odeur des cartes fra√Æches et des amiti√©s sur le point d'√™tre test√©es ! Bienvenue dans l'ar√®ne du Dutch !", type: 'joke' },
  { comment: "Chers joueurs, pr√©parez-vous √† d√©couvrir vos v√©ritables talents... ou leurs myst√©rieuses absences !", type: 'sarcasm' },
  { comment: "Les cartes sont distribu√©es, les esprits s'√©chauffent ! Que la meilleure strat√©gie triomphe !", type: 'encouragement' },
  { comment: "Bienvenue dans cette nouvelle aventure ludique ! Ici, chaque carte raconte une histoire !", type: 'info' },
  { comment: "Nouvelle partie, nouvelles opportunit√©s de briller ! Ou de sombrer dans la m√©diocrit√©, mais restons positifs !", type: 'joke' }
];

// Commentaires d'information sur l'√©tat du jeu
const getInfoComment = (players: Player[], roundHistory: { scores: number[], dutchPlayerId?: string }[]): string => {
  if (players.length === 0) return "Pr√©parez-vous pour une aventure m√©morable ! Le Dutch n'attend que vous !";

  const sortedPlayers = [...players].sort((a, b) => a.totalScore - b.totalScore);
  const leader = sortedPlayers[0];
  const runnerUp = sortedPlayers.length > 1 ? sortedPlayers[1] : null;

  if (!leader.rounds || leader.rounds.length === 0) {
    return "Premi√®re manche ! Montrez-nous de quoi vous √™tes capables ! Le talent se r√©v√®le dans l'action !";
  }

  const currentRound = players[0].rounds.length;
  
  if (runnerUp) {
    const diff = runnerUp.totalScore - leader.totalScore;
    if (diff === 0) {
      return `√âgalit√© parfaite apr√®s ${currentRound} manches ! Voil√† ce qu'on appelle un match √©quilibr√© ! Qui va faire la diff√©rence ?`;
    } else if (diff <= 5) {
      return `${leader.name} devance ${runnerUp.name} de ${diff} points seulement ! C'est du suspense de haute qualit√© !`;
    } else if (diff <= 12) {
      return `${diff} points d'√©cart apr√®s ${currentRound} manches ! ${leader.name} prend ses marques, mais rien n'est jou√© !`;
    } else {
      return `${diff} points s√©parent ${leader.name} de la concurrence ! Domination en cours, mais le Dutch r√©serve toujours des surprises !`;
    }
  }

  return `${leader.name} m√®ne la danse apr√®s ${currentRound} manches ! Beau d√©marrage, mais la route est encore longue !`;
};

// Commentaires al√©atoires dr√¥les enrichis
const randomJokeComments: Comment[] = [
  { 
    comment: "Si les cartes parlaient, elles vous diraient probablement de r√©viser vos strat√©gies... Mais bon, qui √©coute les cartes ?", 
    type: 'joke' 
  },
  { 
    comment: "Le Dutch, c'est comme la m√©t√©o : impr√©visible, parfois orageux, mais toujours fascinant √† observer !", 
    type: 'sarcasm' 
  },
  { 
    comment: "Les vrais champions du Dutch ne gagnent pas, ils font perdre les autres avec style et √©l√©gance !", 
    type: 'joke' 
  },
  { 
    comment: "Cette intensit√© sur chaque carte... Si l'√©motion √©tait un sport olympique, vous seriez tous m√©daill√©s !", 
    type: 'encouragement' 
  },
  { 
    comment: "Regarder vos visages quand vous tirez une carte... C'est tout un po√®me ! De l'extase √† la trag√©die en 0,5 seconde !", 
    type: 'joke' 
  },
  { 
    comment: "Le Dutch : invent√© par quelqu'un qui voulait tester la solidit√© des amiti√©s. Mission accomplie, dirais-je !", 
    type: 'sarcasm' 
  },
  { 
    comment: "Mes chers joueurs, vous transformez chaque manche en √©pop√©e ! C'est beau comme un lever de soleil !", 
    type: 'encouragement' 
  },
  { 
    comment: "Cette tension palpable... On pourrait la couper au couteau ! Ou avec une carte de Dutch, c'est plus dans le th√®me !", 
    type: 'joke' 
  }
];

// Fonction utilitaire pour obtenir un √©l√©ment al√©atoire d'un tableau
const getRandomElementFromArray = <T>(array: T[]): T => {
  return array[Math.floor(Math.random() * array.length)];
};
